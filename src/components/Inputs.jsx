import React from "react";

const inputData = [
  {
    id: 1,
    label: "Id",
    details: "Unique identifier for the post",
    choice: "Id",
  },
  { id: 2, label: "Title", details: "Title for the post", choice: "Name" },
  {
    id: 3,
    label: "Publish Date",
    details: "Date on which you want the post to be published",
    choice: "Publish Date",
  },
];
const AddInputData = [
  {
    id: 1,
    label: "Slug",
    details:
      "Slug of the post. Will be automatically generated from title if empty",
    choice: "Slug",
  },
  {
    id: 2,
    label: "Excerpt",
    details: "Short excerpt of the blog post",
    choice: "Excerpt",
  },
  {
    id: 3,
    label: "Tags",
    details: "Tags associated with the post",
    choice: "Tags",
  },
  {
    id: 4,
    label: "Related Posts",
    details: "Post related to the given post",
    choice: "Related Posts",
  },
  {
    id: 5,
    label: "Authors",
    details: "Authors of the post",
    choice: "Authors",
  },
  {
    id: 6,
    label: "Ready to Publish",
    details: "Is the post in draft or ready to publish?",
    choice: "Ready To Publish",
  },
  {
    id: 7,
    label: "Cover",
    details: "Cover image for the post",
    choice: "Page Cover",
  },
  {
    id: 8,
    label: "OG",
    details: "OG image for the post. If black, cover will be taken",
    choice: "-- Select an option --",
  },
  {
    id: 9,
    label: "Hide Cover",
    details: "Do you want to hide the cover image",
    choice: "Hide Cover",
  },
  {
    id: 10,
    label: "Featured",
    details: "Should the post be featured",
    choice: "Featured",
  },
  {
    id: 11,
    label: "Last Edited Time",
    details: "Last edited time of the post",
    choice: "Last Edited Time",
  },
  {
    id: 12,
    label: "Extra Info",
    details: "Extra info about your post",
    choice: "Extra Info",
  },
  {
    id: 13,
    label: "Hide in main feed",
    details: "Should the post be hidden from the main blog feed page?",
    choice: "Hide in Main Feed",
  },
  {
    id: 14,
    label: "Fallback Cover",
    details: "Do you have an autogenerated fallback cover?",
    choice: "-- Select an option --",
  },
  {
    id: 15,
    label: "Do not Index",
    details: "Do you want this page not to get indexed?",
    choice: "Do not index",
  },
  {
    id: 16,
    label: "Meta Title",
    details:
      "Meta title of the blog post (If empty, title will be taken as meta title)",
    choice: "Meta Title",
  },
  {
    id: 17,
    label: "Meta Description",
    details:
      "Meta Description of the blog post (If empty, excerpt will be taken as meta description)",
    choice: "Meta Description",
  },
  {
    id: 18,
    label: "Hide CTA",
    details: "Should the cta be hidden on this page?",
    choice: "Hide cta",
  },
  {
    id: 19,
    label: "Canonical URL",
    details: "Canonical url of the page",
    choice: "-- No property found --",
  },
];

const Inputs = () => {
  return (
    <>
      <div className="border-b-2 pb-8">
        {inputData.map((inputD) => {
          return (
            <div className="flex  mt-6">
              <div className="w-[45%]">
                <p className="text-gray-900 font-semibold">
                  {inputD.label}{" "}
                  <span className="text-red-700 font-semibold ">*</span>
                </p>
                <p className="text-gray-500 text-sm">{inputD.details}</p>
              </div>
              <div className="flex-1">
                <select
                  name=""
                  id=""
                  className="border border-gray-400 w-full px-2 py-2 rounded-md text-sm"
                >
                  <option value="id">{inputD.choice}</option>
                </select>
              </div>
            </div>
          );
        })}
      </div>
      <div className=" pb-8">
        <p className="text-gray-500 font-medium mb-4 mt-10">
          Additional fields are always good to add.
        </p>
        {AddInputData.map((inputD) => {
          return (
            <div className="flex  mt-6">
              <div className="w-[45%]">
                <p className="text-gray-900 font-semibold ">
                  {inputD.label}{" "}
                  <span className="text-red-700 font-semibold ">*</span>
                </p>
                <p className="text-gray-500 text-sm">{inputD.details}</p>
              </div>
              <div className="flex-1">
                <select
                  name=""
                  id=""
                  className="border border-gray-400 w-full px-2 py-2 rounded-md text-sm"
                >
                  <option value="id">{inputD.choice}</option>
                </select>
              </div>
            </div>
          );
        })}
      </div>
    </>
  );
};

export default Inputs;
